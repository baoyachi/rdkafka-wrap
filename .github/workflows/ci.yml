name: check
on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt
      - name: Check format
        run: cargo fmt --all -- --check
      - name: Check fix
        run: cargo fix && cargo fix
      - name: Check with clippy
        run: cargo clippy --all -- -D warnings
      - name: Build Release
        run: cargo build --release --all-features

      # build on nightly
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Build on nightly
        run: cargo build --release
  test:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
#      - name: Install Tarpaulin
#        uses: actions-rs/install@v0.1
#        with:
#          crate: cargo-tarpaulin
#          version: 0.14.2
#          use-tool-cache: true
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Test Coverage
#        run: |
#          ./test_suite.sh && cargo tarpaulin -o Lcov --output-dir ./coverage && docker-compose down
#      - name: Coveralls
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
  publish-crate:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v3
      - name: Publish
        shell: bash
        run: |
          cargo publish --token ${{ secrets.CRATES_GITHUB_TOKEN }}